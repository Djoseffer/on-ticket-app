spring.application.name=on-ticket
spring.data.mongodb.uri=mongodb://localhost:27017/onticket-app-db
jwt.public.key=classpath:app.pub
jwt.private.key=classpath:app.key

# Endereço do Kafka broker (porta do localhost do Docker)
spring.kafka.bootstrap-servers=localhost:9092

# Configurações para o produtor Kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.IntegerSerializer

# Configurações para o consumidor Kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.group-id=tickets-group

# Opcional: Timeout para garantir que a aplicação reconecte em caso de falhas de conexão
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.missing-topics-fatal=false

management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
